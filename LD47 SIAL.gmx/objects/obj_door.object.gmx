<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>use_range = 16;
using = false;
need_deadbolt_text = "A deadbolt can be attached to this door.";
have_deadbolt_text = "Press E to use deadbolt.";
adding_timer = 4*room_speed;
adding_time = adding_timer;
use_draw = false;
deadbolt_added = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (deadbolt_added)
{
    using = false;
    use_draw = false;
}

if (instance_exists(obj_player))
{
    if (!using)
    {
        adding_timer = adding_time;
        if (distance_to_object(obj_player) &lt; use_range) and !deadbolt_added
        {
            use_draw = true;
            if (keyboard_check_pressed(ord("E")))
            {
                use_draw = false;
                using = true;
                obj_player.using = true;

            }
        }    
        else
        {
            use_draw = false;
        }
    }
    else
    {
        if (keyboard_check_pressed(ord("E")))
        {
            using = false;
            obj_player.using = false;
        }
        
        if (adding_timer-- &lt;= 0)
        {
            var s = instance_create(x,y,obj_sound);
            s.snd_id = snd_gunshot;   
            deadbolt_added = true;
            obj_player.deadbolt_count--;
            using = false;
            obj_player.using = false;
        }
    }    


}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (instance_exists(obj_player))
{
    if (use_draw)
    {
        draw_set_font(fnt_convo);
        if (obj_player.deadbolt_count &gt; 0)
        {
            draw_text(x+32,y + 48,have_deadbolt_text);
        }
        else
        {
            draw_text(x+32,y + 48,need_deadbolt_text);
        }
    }   
    
    if (using)
    {
        draw_set_font(fnt_convo);
        draw_text(x + 32,y +48,string(round(100*(adding_time-adding_timer)/adding_time)) + "%");
    }
}
draw_set_halign(fa_center);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
