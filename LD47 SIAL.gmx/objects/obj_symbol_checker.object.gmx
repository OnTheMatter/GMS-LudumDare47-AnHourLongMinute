<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>symbol_1_type = choose(0,1);
symbol_2_type = choose(0,1);
symbol_3_type = choose(0,1);
symbol_4_type = choose(0,1);
symbol_5_type = choose(0,1);
symbol_6_type = choose(0,1);
if (instance_exists(obj_global_handler))
{
    symbol_1_type = obj_global_handler.symbol_1_type;
    symbol_2_type = obj_global_handler.symbol_2_type;
    symbol_3_type = obj_global_handler.symbol_3_type;
    symbol_4_type = obj_global_handler.symbol_4_type;
    symbol_5_type = obj_global_handler.symbol_5_type;
    symbol_6_type = obj_global_handler.symbol_6_type;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>correct_count = 0;
with(obj_symbol)
{
    switch(symbol_id)
    {
        case -1:
        
        break;
        
        case 1:
            if (other.symbol_1_type == circle)
            {
                other.correct_count++;
            }
        break;
        
        case 2:
            if (other.symbol_2_type == circle)
            {
                other.correct_count++;
            }
        break;
        
        case 3:
            if (other.symbol_3_type == circle)
            {
                other.correct_count++;
            }
        break;
        
        case 4:
            if (other.symbol_4_type == circle)
            {
                other.correct_count++;
            }
        break;
        
        case 5:
            if (other.symbol_5_type == circle)
            {
                other.correct_count++;
            }
        break;
        
        case 6:
            if (other.symbol_6_type == circle)
            {
                other.correct_count++;
            }
        break;
    }
}
if (correct_count &gt;= 6)
{
    with (obj_stove)
    {
        turned_on = true;
        sprite_index = spr_stove_on;
    }
}
/*
with (obj_paperwork)
{
    if (paper_id != -1)
    {
        var num_pos = 0;
        var final_pos = -1;
        for (var i = 0; i &lt; string_length(obj_global_handler.paper_string);i++)
        {
            if (string_char_at(obj_global_handler.paper_string,i) == 1)
            {
                num_pos++;
            }
            if (i == paper_id)
            {
                final_pos = i;
                
            }
        }
        
        if (final_pos != -1)
        {
            num_pos = round(num_pos);
            switch(num_pos)
            {
                case 1:
                    divulged_text = string(obj_global_handler.safe_p1) + "***";
                break;
                
                case 2:
                    divulged_text = "*" + string(obj_global_handler.safe_p2) + "**";
                break;
                
                case 3:
                    divulged_text = "**" + string(obj_global_handler.safe_p3) + "*";
                break;
                
                case 4:
                    divulged_text = "***" + string(obj_global_handler.safe_p4);
                break;
                
                default:
                
                break;  //don't need it but who cares. 
            }
        }
    }
    
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
