<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_safe</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>p1 = irandom_range(1,4);
p2 = irandom_range(1,4);
p3 = irandom_range(1,4);
p4 = irandom_range(1,4);
p1_attempt = 0;
p2_attempt = 0;
p3_attempt = 0;
p4_attempt = 0;
b1 = instance_create(-1000,-1000,obj_button);
b1.sprite_index = spr_button_frame;
b1.text = "1";
b2 = instance_create(-1000,-1000,obj_button);
b2.sprite_index = spr_button_frame;
b2.text = "2";
b3 = instance_create(-1000,-1000,obj_button);
b3.sprite_index = spr_button_frame;
b3.text = "3";
b4 = instance_create(-1000,-1000,obj_button);
b4.sprite_index = spr_button_frame;
b4.text = "4";
if instance_exists(obj_global_handler)
{
    p1 = obj_global_handler.safe_p1;
    p2 = obj_global_handler.safe_p2;
    p3 = obj_global_handler.safe_p3;
    p4 = obj_global_handler.safe_p4;
}
current_index = 1;
use_range = 32;
using = false;
use_text = "Press E to try the combination.";
opened = false;
used = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy(b1);
instance_destroy(b2);
instance_destroy(b3);
instance_destroy(b4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_use = false;
if (!opened)
{
    if (instance_exists(obj_player))
    {
        if (!used)
        {
            b1.x = x-6400;
            b2.x = x-3200;
            b3.x = x+3200;
            b4.x = x+6400;
            p1_attempt = 0;
            p2_attempt = 0;
            p3_attempt = 0;
            p4_attempt = 0;
            if (distance_to_object(obj_player) &lt; use_range)
            {
                draw_use = true;
                if (keyboard_check_pressed(ord("E")))
                {
                    used = true;
                    obj_player.using = true;
                }
            }    
            else
            {
                draw_use = false;
            }
        }
        else
        {
            if (keyboard_check_pressed(ord("E")))
            {
                used = false;
                obj_player.using = false;
            }
            b1.x = x-64;
            b2.x = x-32;
            b3.x = x+32;
            b4.x = x+64;
            b1.y = y+32;
            b2.y = y+32;
            b3.y = y+32;
            b4.y = y+32;
            
            if (b1.clicked)
            {
                switch(current_index)
                {
                    case 1:
                        p1_attempt = 1;
                    break;
                    
                    case 2:
                        p2_attempt = 1;
                    break;
                    
                    case 3:
                        p3_attempt = 1;
                    break;
                    
                    case 4:
                        p4_attempt = 1;
                        current_index = 0;
                        if (p1_attempt == p1) and (p2_attempt == p2) and (p3_attempt == p3) and (p4_attempt == p4)
                        {
                            opened = true;
                            obj_player.using = false;
                        }
                    break;
                }
                current_index++;
            
            }
            
            if (b2.clicked)
            {
                switch(current_index)
                {
                    case 1:
                        p1_attempt = 2;
                    break;
                    
                    case 2:
                        p2_attempt = 2;
                    break;
                    
                    case 3:
                        p3_attempt = 2;
                    break;
                    
                    case 4:
                        p4_attempt = 2;
                        current_index = 0;
                        if (p1_attempt == p1) and (p2_attempt == p2) and (p3_attempt == p3) and (p4_attempt == p4)
                        {
                            opened = true;
                            obj_player.using = false;
                        }
                    break;
                }
                current_index++;
            }
            
            if (b3.clicked)
            {
                switch(current_index)
                {
                    case 1:
                        p1_attempt = 3;
                    break;
                    
                    case 2:
                        p2_attempt = 3;
                    break;
                    
                    case 3:
                        p3_attempt = 3;
                    break;
                    
                    case 4:
                        p4_attempt = 3;
                        current_index = 0;
                        if (p1_attempt == p1) and (p2_attempt == p2) and (p3_attempt == p3) and (p4_attempt == p4)
                        {
                            opened = true;
                            obj_player.using = false;
                        }
                    break;
                }
                current_index++;
            }
            
            if (b4.clicked)
            {
                switch(current_index)
                {
                    case 1:
                        p1_attempt = 4;
                    break;
                    
                    case 2:
                        p2_attempt = 4;
                    break;
                    
                    case 3:
                        p3_attempt = 4;
                    break;
                    
                    case 4:
                        p4_attempt = 4;
                        current_index = 0;
                        if (p1_attempt == p1) and (p2_attempt == p2) and (p3_attempt == p3) and (p4_attempt == p4)
                        {
                            opened = true;
                            obj_player.using = false;
                        }
                    break;
                }
                current_index++;
            }
            
        }
    
    }
    else
    {
        draw_use = false;
    }
}
else
{
    var g = instance_create(x,y,obj_gun);
    g.bullets = 7;
    var s = instance_create(x,y,obj_sound);
    s.snd_id = snd_breakin;
    s.life_timer = 2*room_speed;
    instance_destroy();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (used)
{
    var temp_s = "";
    for (var i = 1; i &lt; current_index; i++)
    {
        temp_s += "*";
    }
    draw_text(x,y - 48,temp_s);
}
if (draw_use)
{
    draw_set_font(fnt_convo);
    draw_text(x,y - 72,use_text);
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
